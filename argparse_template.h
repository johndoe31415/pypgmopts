/*
 *   This file was AUTO-GENERATED by pypgmopts.
 *
 *   https://github.com/johndoe31415/pypgmopts
 *
 *   Do not edit it by hand, your changes will be overwritten.
 *
 *   Generated at: ${now.strftime("%Y-%m-%d %H:%M:%S")}
 */

#ifndef __ARGPARSE${name_suffix.upper()}_H__
#define __ARGPARSE${name_suffix.upper()}_H__

#include <stdbool.h>

%for opt in opts:
%if type(opt.default) == int:
#define ARGPARSE${name_suffix.upper()}_DEFAULT_${opt.name.upper()}		${opt.default}
%elif type(opt.default) == str:
#define ARGPARSE${name_suffix.upper()}_DEFAULT_${opt.name.upper()}		"${opt.default.replace("\"", "\\\"")}"
%elif type(opt.default) == float:
#define ARGPARSE${name_suffix.upper()}_DEFAULT_${opt.name.upper()}		%.5e
%endif
%endfor

#define ARGPARSE${name_suffix.upper()}_NO_OPTION		0
#define ARGPARSE${name_suffix.upper()}_POSITIONAL_ARG	1

enum argparse${name_suffix}_option_t {
%for (value, opt) in enumerate(opts, 2):
	ARG${name_suffix.upper()}_${opt.name.upper()} = ${value},
%endfor
};

typedef void (*argparse${name_suffix}_errmsg_callback_t)(const char *errmsg, ...);
typedef void (*argparse${name_suffix}_errmsg_option_callback_t)(enum argparse${name_suffix}_option_t error_option, const char *errmsg, ...);
typedef bool (*argparse${name_suffix}_callback_t)(enum argparse${name_suffix}_option_t option, const char *value, argparse${name_suffix}_errmsg_callback_t errmsg_callback);
typedef bool (*argparse${name_suffix}_plausibilization_callback_t)(argparse${name_suffix}_errmsg_option_callback_t errmsg_callback);

bool argparse${name_suffix}_parse(int argc, char **argv, argparse${name_suffix}_callback_t argument_callback, argparse${name_suffix}_plausibilization_callback_t plausibilization_callback);
void argparse${name_suffix}_show_syntax(void);
void argparse${name_suffix}_parse_or_quit(int argc, char **argv, argparse${name_suffix}_callback_t argument_callback, argparse${name_suffix}_plausibilization_callback_t plausibilization_callback);

#endif
